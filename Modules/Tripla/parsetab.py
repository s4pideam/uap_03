
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocRPARINleftSEMICOLONCOMMAIDnonassocASSIGNELSEWHILEIFDOLETleftORleftANDnonassocLTGTEQNEQLTEGTEleftADDSUBleftMULDIVADD AND ASSIGN COMMA COMMENT CONST DIV DO ELSE EQ FALSE GT GTE ID IF IN LBRA LET LPAR LT LTE MUL NEQ OR RBRA RPAR SEMICOLON SUB THEN TRUE WHILEE : LET D IN EE : IDE : ID LPAR A RPAR\n        E : E ADD E\n        | E SUB E\n        | E MUL E\n        | E DIV E\n        E : LPAR E RPARE : CONSTE : ID ASSIGN EE : E SEMICOLON EE : IF B THEN E ELSE EE : WHILE B DO LBRA E RBRAA : EA : A COMMA ED : ID LPAR V RPAR LBRA E RBRAD : D ID LPAR V RPAR LBRA E RBRAV : IDV : V COMMA VB : LPAR B RPARB : TRUEB : FALSE\n        B : B OR B\n        | B AND B\n        | B NEQ B\n        | B EQ B\n        \n        B : E EQ E\n        | E NEQ E\n        | E LT E\n        | E GT E\n        | E LTE E\n        | E GTE E\n        '
    
_lr_action_items = {'LET':([0,4,6,7,8,9,10,11,12,15,16,20,29,36,37,38,39,40,41,42,43,44,45,46,55,68,73,76,80,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'ID':([0,2,4,6,7,8,9,10,11,12,13,15,16,20,29,31,36,37,38,39,40,41,42,43,44,45,46,51,55,68,71,73,76,80,83,84,],[3,14,3,3,3,3,3,3,3,3,30,3,3,3,3,52,3,3,3,3,3,3,3,3,3,3,3,52,3,3,52,3,3,3,-16,-17,]),'LPAR':([0,3,4,6,7,8,9,10,11,12,14,15,16,20,29,30,36,37,38,39,40,41,42,43,44,45,46,55,68,73,76,80,],[4,15,4,20,20,4,4,4,4,4,31,4,4,20,4,51,4,20,20,20,20,4,4,4,4,4,4,4,4,4,4,4,]),'CONST':([0,4,6,7,8,9,10,11,12,15,16,20,29,36,37,38,39,40,41,42,43,44,45,46,55,68,73,76,80,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'IF':([0,4,6,7,8,9,10,11,12,15,16,20,29,36,37,38,39,40,41,42,43,44,45,46,55,68,73,76,80,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'WHILE':([0,4,6,7,8,9,10,11,12,15,16,20,29,36,37,38,39,40,41,42,43,44,45,46,55,68,73,76,80,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,3,5,24,25,26,27,28,34,35,50,54,78,79,],[0,-2,-9,-4,-5,-6,-7,-11,-10,-8,-1,-3,-12,-13,]),'ADD':([1,3,5,17,19,24,25,26,27,28,33,34,35,48,50,54,56,61,62,63,64,65,66,72,74,78,79,81,82,],[8,-2,-9,8,8,-4,-5,-6,-7,8,8,8,-8,8,8,-3,8,8,8,8,8,8,8,8,8,8,-13,8,8,]),'SUB':([1,3,5,17,19,24,25,26,27,28,33,34,35,48,50,54,56,61,62,63,64,65,66,72,74,78,79,81,82,],[9,-2,-9,9,9,-4,-5,-6,-7,9,9,9,-8,9,9,-3,9,9,9,9,9,9,9,9,9,9,-13,9,9,]),'MUL':([1,3,5,17,19,24,25,26,27,28,33,34,35,48,50,54,56,61,62,63,64,65,66,72,74,78,79,81,82,],[10,-2,-9,10,10,10,10,-6,-7,10,10,10,-8,10,10,-3,10,10,10,10,10,10,10,10,10,10,-13,10,10,]),'DIV':([1,3,5,17,19,24,25,26,27,28,33,34,35,48,50,54,56,61,62,63,64,65,66,72,74,78,79,81,82,],[11,-2,-9,11,11,11,11,-6,-7,11,11,11,-8,11,11,-3,11,11,11,11,11,11,11,11,11,11,-13,11,11,]),'SEMICOLON':([1,3,5,17,19,24,25,26,27,28,33,34,35,48,50,54,56,61,62,63,64,65,66,72,74,78,79,81,82,],[12,-2,-9,12,12,-4,-5,-6,-7,-11,12,-10,-8,12,12,-3,12,12,12,12,12,12,12,12,12,-12,-13,12,12,]),'RPAR':([3,5,17,21,22,24,25,26,27,28,32,33,34,35,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,69,72,77,78,79,],[-2,-9,35,-21,-22,-4,-5,-6,-7,-11,54,-14,-10,-8,67,35,-1,-18,70,-3,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-20,75,-15,-19,-12,-13,]),'EQ':([3,5,18,19,21,22,23,24,25,26,27,28,34,35,47,48,50,54,57,58,59,60,61,62,63,64,65,66,67,78,79,],[-2,-9,40,41,-21,-22,40,-4,-5,-6,-7,-11,-10,-8,40,41,-1,-3,40,40,None,None,-27,-28,-29,-30,-31,-32,-20,-12,-13,]),'NEQ':([3,5,18,19,21,22,23,24,25,26,27,28,34,35,47,48,50,54,57,58,59,60,61,62,63,64,65,66,67,78,79,],[-2,-9,39,42,-21,-22,39,-4,-5,-6,-7,-11,-10,-8,39,42,-1,-3,39,39,None,None,-27,-28,-29,-30,-31,-32,-20,-12,-13,]),'LT':([3,5,19,24,25,26,27,28,34,35,48,50,54,78,79,],[-2,-9,43,-4,-5,-6,-7,-11,-10,-8,43,-1,-3,-12,-13,]),'GT':([3,5,19,24,25,26,27,28,34,35,48,50,54,78,79,],[-2,-9,44,-4,-5,-6,-7,-11,-10,-8,44,-1,-3,-12,-13,]),'LTE':([3,5,19,24,25,26,27,28,34,35,48,50,54,78,79,],[-2,-9,45,-4,-5,-6,-7,-11,-10,-8,45,-1,-3,-12,-13,]),'GTE':([3,5,19,24,25,26,27,28,34,35,48,50,54,78,79,],[-2,-9,46,-4,-5,-6,-7,-11,-10,-8,46,-1,-3,-12,-13,]),'COMMA':([3,5,24,25,26,27,28,32,33,34,35,50,52,53,54,69,72,77,78,79,],[-2,-9,-4,-5,-6,-7,-11,55,-14,-10,-8,-1,-18,71,-3,71,-15,-19,-12,-13,]),'ELSE':([3,5,24,25,26,27,28,34,35,50,54,56,78,79,],[-2,-9,-4,-5,-6,-7,-11,-10,-8,-1,-3,73,-12,-13,]),'THEN':([3,5,18,21,22,24,25,26,27,28,34,35,50,54,57,58,59,60,61,62,63,64,65,66,67,78,79,],[-2,-9,36,-21,-22,-4,-5,-6,-7,-11,-10,-8,-1,-3,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-20,-12,-13,]),'OR':([3,5,18,21,22,23,24,25,26,27,28,34,35,47,50,54,57,58,59,60,61,62,63,64,65,66,67,78,79,],[-2,-9,37,-21,-22,37,-4,-5,-6,-7,-11,-10,-8,37,-1,-3,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-20,-12,-13,]),'AND':([3,5,18,21,22,23,24,25,26,27,28,34,35,47,50,54,57,58,59,60,61,62,63,64,65,66,67,78,79,],[-2,-9,38,-21,-22,38,-4,-5,-6,-7,-11,-10,-8,38,-1,-3,38,-24,-25,-26,-27,-28,-29,-30,-31,-32,-20,-12,-13,]),'DO':([3,5,21,22,23,24,25,26,27,28,34,35,50,54,57,58,59,60,61,62,63,64,65,66,67,78,79,],[-2,-9,-21,-22,49,-4,-5,-6,-7,-11,-10,-8,-1,-3,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-20,-12,-13,]),'RBRA':([3,5,24,25,26,27,28,34,35,50,54,74,78,79,81,82,],[-2,-9,-4,-5,-6,-7,-11,-10,-8,-1,-3,79,-12,-13,83,84,]),'ASSIGN':([3,],[16,]),'TRUE':([6,7,20,37,38,39,40,],[21,21,21,21,21,21,21,]),'FALSE':([6,7,20,37,38,39,40,],[22,22,22,22,22,22,22,]),'IN':([13,83,84,],[29,-16,-17,]),'LBRA':([49,70,75,],[68,76,80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'E':([0,4,6,7,8,9,10,11,12,15,16,20,29,36,37,38,39,40,41,42,43,44,45,46,55,68,73,76,80,],[1,17,19,19,24,25,26,27,28,33,34,48,50,56,19,19,19,19,61,62,63,64,65,66,72,74,78,81,82,]),'D':([2,],[13,]),'B':([6,7,20,37,38,39,40,],[18,23,47,57,58,59,60,]),'A':([15,],[32,]),'V':([31,51,71,],[53,69,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> E","S'",1,None,None,None),
  ('E -> LET D IN E','E',4,'p_E_let','triplayacc.py',57),
  ('E -> ID','E',1,'p_E_id','triplayacc.py',61),
  ('E -> ID LPAR A RPAR','E',4,'p_E_id_arg','triplayacc.py',65),
  ('E -> E ADD E','E',3,'p_E_binop','triplayacc.py',70),
  ('E -> E SUB E','E',3,'p_E_binop','triplayacc.py',71),
  ('E -> E MUL E','E',3,'p_E_binop','triplayacc.py',72),
  ('E -> E DIV E','E',3,'p_E_binop','triplayacc.py',73),
  ('E -> LPAR E RPAR','E',3,'p_E_parentheses','triplayacc.py',78),
  ('E -> CONST','E',1,'p_E_const','triplayacc.py',82),
  ('E -> ID ASSIGN E','E',3,'p_E_assign','triplayacc.py',86),
  ('E -> E SEMICOLON E','E',3,'p_E_semicolon','triplayacc.py',90),
  ('E -> IF B THEN E ELSE E','E',6,'p_E_if_ele','triplayacc.py',94),
  ('E -> WHILE B DO LBRA E RBRA','E',6,'p_E_while','triplayacc.py',98),
  ('A -> E','A',1,'p_A_single','triplayacc.py',102),
  ('A -> A COMMA E','A',3,'p_A_multiple','triplayacc.py',106),
  ('D -> ID LPAR V RPAR LBRA E RBRA','D',7,'p_D_single','triplayacc.py',110),
  ('D -> D ID LPAR V RPAR LBRA E RBRA','D',8,'p_D_multiple','triplayacc.py',114),
  ('V -> ID','V',1,'p_V_single','triplayacc.py',118),
  ('V -> V COMMA V','V',3,'p_V_multiple','triplayacc.py',122),
  ('B -> LPAR B RPAR','B',3,'p_B_parentheses','triplayacc.py',126),
  ('B -> TRUE','B',1,'p_B_true','triplayacc.py',130),
  ('B -> FALSE','B',1,'p_B_false','triplayacc.py',134),
  ('B -> B OR B','B',3,'p_B_lop','triplayacc.py',139),
  ('B -> B AND B','B',3,'p_B_lop','triplayacc.py',140),
  ('B -> B NEQ B','B',3,'p_B_lop','triplayacc.py',141),
  ('B -> B EQ B','B',3,'p_B_lop','triplayacc.py',142),
  ('B -> E EQ E','B',3,'p_B_relop','triplayacc.py',148),
  ('B -> E NEQ E','B',3,'p_B_relop','triplayacc.py',149),
  ('B -> E LT E','B',3,'p_B_relop','triplayacc.py',150),
  ('B -> E GT E','B',3,'p_B_relop','triplayacc.py',151),
  ('B -> E LTE E','B',3,'p_B_relop','triplayacc.py',152),
  ('B -> E GTE E','B',3,'p_B_relop','triplayacc.py',153),
]
